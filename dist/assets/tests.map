{"version":3,"sources":["vendor/ember-cli/tests-prefix.js","headerapp/tests/app.jshint.lint-test.js","headerapp/tests/components/book-ends/component.jshint.lint-test.js","headerapp/tests/components/header-nav/component.jshint.lint-test.js","headerapp/tests/helpers/destroy-app.js","headerapp/tests/helpers/destroy-app.jshint.lint-test.js","headerapp/tests/helpers/module-for-acceptance.js","headerapp/tests/helpers/module-for-acceptance.jshint.lint-test.js","headerapp/tests/helpers/resolver.js","headerapp/tests/helpers/resolver.jshint.lint-test.js","headerapp/tests/helpers/start-app.js","headerapp/tests/helpers/start-app.jshint.lint-test.js","headerapp/tests/integration/components/book-ends/component-test.js","headerapp/tests/integration/components/book-ends/component-test.jshint.lint-test.js","headerapp/tests/integration/components/header-nav/component-test.js","headerapp/tests/integration/components/header-nav/component-test.jshint.lint-test.js","headerapp/tests/resolver.jshint.lint-test.js","headerapp/tests/router.jshint.lint-test.js","headerapp/tests/routes/details.jshint.lint-test.js","headerapp/tests/test-helper.js","headerapp/tests/test-helper.jshint.lint-test.js","headerapp/tests/unit/routes/details-test.js","headerapp/tests/unit/routes/details-test.jshint.lint-test.js","vendor/ember-cli/tests-suffix.js"],"sourcesContent":["'use strict';\n","define('headerapp/tests/app.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | app.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'app.js should pass jshint.');\n  });\n});","define('headerapp/tests/components/book-ends/component.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | components/book-ends/component.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/book-ends/component.js should pass jshint.');\n  });\n});","define('headerapp/tests/components/header-nav/component.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | components/header-nav/component.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/header-nav/component.js should pass jshint.');\n  });\n});","define('headerapp/tests/helpers/destroy-app', ['exports', 'ember'], function (exports, _ember) {\n  exports['default'] = destroyApp;\n\n  function destroyApp(application) {\n    _ember['default'].run(application, 'destroy');\n  }\n});","define('headerapp/tests/helpers/destroy-app.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | helpers/destroy-app.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/destroy-app.js should pass jshint.');\n  });\n});","define('headerapp/tests/helpers/module-for-acceptance', ['exports', 'qunit', 'ember', 'headerapp/tests/helpers/start-app', 'headerapp/tests/helpers/destroy-app'], function (exports, _qunit, _ember, _headerappTestsHelpersStartApp, _headerappTestsHelpersDestroyApp) {\n  var Promise = _ember['default'].RSVP.Promise;\n\n  exports['default'] = function (name) {\n    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n    (0, _qunit.module)(name, {\n      beforeEach: function beforeEach() {\n        this.application = (0, _headerappTestsHelpersStartApp['default'])();\n\n        if (options.beforeEach) {\n          return options.beforeEach.apply(this, arguments);\n        }\n      },\n\n      afterEach: function afterEach() {\n        var _this = this;\n\n        var afterEach = options.afterEach && options.afterEach.apply(this, arguments);\n        return Promise.resolve(afterEach).then(function () {\n          return (0, _headerappTestsHelpersDestroyApp['default'])(_this.application);\n        });\n      }\n    });\n  };\n});","define('headerapp/tests/helpers/module-for-acceptance.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | helpers/module-for-acceptance.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/module-for-acceptance.js should pass jshint.');\n  });\n});","define('headerapp/tests/helpers/resolver', ['exports', 'headerapp/resolver', 'headerapp/config/environment'], function (exports, _headerappResolver, _headerappConfigEnvironment) {\n\n  var resolver = _headerappResolver['default'].create();\n\n  resolver.namespace = {\n    modulePrefix: _headerappConfigEnvironment['default'].modulePrefix,\n    podModulePrefix: _headerappConfigEnvironment['default'].podModulePrefix\n  };\n\n  exports['default'] = resolver;\n});","define('headerapp/tests/helpers/resolver.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | helpers/resolver.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/resolver.js should pass jshint.');\n  });\n});","define('headerapp/tests/helpers/start-app', ['exports', 'ember', 'headerapp/app', 'headerapp/config/environment'], function (exports, _ember, _headerappApp, _headerappConfigEnvironment) {\n  exports['default'] = startApp;\n\n  function startApp(attrs) {\n    var application = undefined;\n\n    // use defaults, but you can override\n    var attributes = _ember['default'].assign({}, _headerappConfigEnvironment['default'].APP, attrs);\n\n    _ember['default'].run(function () {\n      application = _headerappApp['default'].create(attributes);\n      application.setupForTesting();\n      application.injectTestHelpers();\n    });\n\n    return application;\n  }\n});","define('headerapp/tests/helpers/start-app.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | helpers/start-app.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/start-app.js should pass jshint.');\n  });\n});","define('headerapp/tests/integration/components/book-ends/component-test', ['exports', 'ember-qunit', 'htmlbars-inline-precompile'], function (exports, _emberQunit, _htmlbarsInlinePrecompile) {\n  var _templateObject = _taggedTemplateLiteral(['{{book-ends}}'], ['{{book-ends}}']),\n      _templateObject2 = _taggedTemplateLiteral(['\\n    {{#book-ends}}\\n      template block text\\n    {{/book-ends}}\\n  '], ['\\n    {{#book-ends}}\\n      template block text\\n    {{/book-ends}}\\n  ']);\n\n  function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\n\n  (0, _emberQunit.moduleForComponent)('book-ends', 'Integration | Component | book ends', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render((0, _htmlbarsInlinePrecompile['default'])(_templateObject));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render((0, _htmlbarsInlinePrecompile['default'])(_templateObject2));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('headerapp/tests/integration/components/book-ends/component-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | integration/components/book-ends/component-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/book-ends/component-test.js should pass jshint.');\n  });\n});","define('headerapp/tests/integration/components/header-nav/component-test', ['exports', 'ember-qunit', 'htmlbars-inline-precompile'], function (exports, _emberQunit, _htmlbarsInlinePrecompile) {\n  var _templateObject = _taggedTemplateLiteral(['{{header-nav}}'], ['{{header-nav}}']),\n      _templateObject2 = _taggedTemplateLiteral(['\\n    {{#header-nav}}\\n      template block text\\n    {{/header-nav}}\\n  '], ['\\n    {{#header-nav}}\\n      template block text\\n    {{/header-nav}}\\n  ']);\n\n  function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\n\n  (0, _emberQunit.moduleForComponent)('header-nav', 'Integration | Component | header nav', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render((0, _htmlbarsInlinePrecompile['default'])(_templateObject));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render((0, _htmlbarsInlinePrecompile['default'])(_templateObject2));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('headerapp/tests/integration/components/header-nav/component-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | integration/components/header-nav/component-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/header-nav/component-test.js should pass jshint.');\n  });\n});","define('headerapp/tests/resolver.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | resolver.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'resolver.js should pass jshint.');\n  });\n});","define('headerapp/tests/router.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | router.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'router.js should pass jshint.');\n  });\n});","define('headerapp/tests/routes/details.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/details.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/details.js should pass jshint.');\n  });\n});","define('headerapp/tests/test-helper', ['exports', 'headerapp/tests/helpers/resolver', 'ember-qunit'], function (exports, _headerappTestsHelpersResolver, _emberQunit) {\n\n  (0, _emberQunit.setResolver)(_headerappTestsHelpersResolver['default']);\n});","define('headerapp/tests/test-helper.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | test-helper.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'test-helper.js should pass jshint.');\n  });\n});","define('headerapp/tests/unit/routes/details-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:details', 'Unit | Route | details', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('headerapp/tests/unit/routes/details-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/routes/details-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/details-test.js should pass jshint.');\n  });\n});","/* jshint ignore:start */\n\nrequire('split-app/tests/test-helper');\nEmberENV.TESTS_FILE_LOADED = true;\n\n/* jshint ignore:end */\n"],"names":[],"mappings":"AAAA;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;","file":"tests.js"}